definitions:
  requestparams.CommunityParams:
    properties:
      avatar:
        description: Avatar is optional.
        type: string
      description:
        description: Description is optional.
        type: string
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  requestparams.CreateBotParams:
    properties:
      avatar:
        type: string
      bot_addr:
        type: string
      bot_port:
        type: integer
      bot_token:
        type: string
      description:
        type: string
      nickname:
        type: string
    required:
    - bot_addr
    - bot_port
    - bot_token
    - nickname
    type: object
  requestparams.CreateUserParams:
    properties:
      avatar:
        description: Avatar is optional.
        type: string
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
    required:
    - avatar
    - email
    - nickname
    - password
    type: object
  requestparams.DeleteUserParams:
    properties:
      uuid:
        type: string
    required:
    - uuid
    type: object
  requestparams.GetCommunityInfoParams:
    properties:
      uuid:
        type: string
    required:
    - uuid
    type: object
  requestparams.GetUsersStatisticsParams:
    properties:
      end_timestamp:
        type: integer
      start_timestamp:
        type: integer
      type:
        description: online_time, message_count, message_length
        type: string
    required:
    - end_timestamp
    - start_timestamp
    - type
    type: object
  requestparams.LoginParamsWithAccount:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requestparams.RegisterAdminParams:
    properties:
      code:
        type: string
      community_info:
        $ref: '#/definitions/requestparams.CommunityParams'
      user_info:
        $ref: '#/definitions/requestparams.CreateUserParams'
    required:
    - code
    - community_info
    - user_info
    type: object
  requestparams.RegisterStaffParams:
    properties:
      user_info:
        $ref: '#/definitions/requestparams.CreateUserParams'
    required:
    - user_info
    type: object
  requestparams.SendToParams:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  requestparams.UpdateUserInfoParams:
    properties:
      avatar:
        description: Avatar is optional.
        type: string
      description:
        description: Description is optional.
        type: string
      email:
        description: Email can not be updated is this period.
        type: string
      is_admin:
        description: IsAdmin is optional.
        type: boolean
      is_enable:
        description: Need to check if the user is admin.
        type: boolean
      nickname:
        description: Nickname is optional.
        type: string
      uuid:
        description: uuid is used for admin to update user info.
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
  description: OpenKF Server API Docs.
  title: OpenKF Server
  version: v0.2.0
paths:
  /api/v1/admin/bot/create:
    post:
      description: Create a new bot
      parameters:
      - description: CreateBotParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.CreateBotParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: CreateBot
      tags:
      - bot
  /api/v1/admin/bot/delete:
    post:
      description: delete bot
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: DeleteBot
      tags:
      - bot
  /api/v1/admin/bot/list:
    post:
      description: get community bot info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: ListBot
      tags:
      - bot
  /api/v1/admin/bot/update:
    post:
      description: update bot info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: UpdateBot
      tags:
      - bot
  /api/v1/admin/staff/create:
    post:
      description: Create a new staff
      parameters:
      - description: RegisterStaffParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.RegisterStaffParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: CreateStaff
      tags:
      - user
  /api/v1/admin/staff/delete:
    post:
      description: Delete a new staff
      parameters:
      - description: DeleteUserParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.DeleteUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: DeleteStaff
      tags:
      - user
  /api/v1/admin/staff/update:
    post:
      description: Update staff info
      parameters:
      - description: UpdateUserInfoParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.UpdateUserInfoParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: UpdateStaff
      tags:
      - user
  /api/v1/common/file/upload:
    post:
      description: upload a file
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: UploadFile
      tags:
      - common
  /api/v1/community/create:
    post:
      description: Create a new community
      parameters:
      - description: Community
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.CommunityParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: CreateCommunity
      tags:
      - community
  /api/v1/community/info:
    post:
      description: get community info
      parameters:
      - description: GetCommunityInfoParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.GetCommunityInfoParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: GetCommunityInfo
      tags:
      - community
  /api/v1/community/me:
    get:
      description: get my community info
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetMyCommunityInfo
      tags:
      - community
  /api/v1/community/update:
    post:
      description: get my community info
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetMyCommunityInfo
      tags:
      - community
  /api/v1/email/code:
    post:
      description: Use email to send verification code
      parameters:
      - description: Email address
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.SendToParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: SendCode
      tags:
      - mail
  /api/v1/login/account:
    post:
      description: logout with account
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: AccountExit
      tags:
      - user
  /api/v1/openim/callback:
    post:
      description: Support OpenIM callback
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: OpenIMCallback
      tags:
      - openim
  /api/v1/platform/slack/config:
    get:
      description: Get slack config
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: SlackConfig
      tags:
      - platform
  /api/v1/platform/slack/customer:
    post:
      description: get slack user info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetSlackCustomer
      tags:
      - platform
  /api/v1/register/admin:
    post:
      description: Create a new admin
      parameters:
      - description: RegisterAdminParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.RegisterAdminParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: AdminRegister
      tags:
      - user
  /api/v1/user/info:
    post:
      description: get user info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetUserInfo
      tags:
      - user
  /api/v1/user/me:
    get:
      description: get my user info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetMyInfo
      tags:
      - user
  /api/v1/user/statistics:
    post:
      description: get user statistics
      parameters:
      - description: GetUsersStatisticsParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requestparams.GetUsersStatisticsParams'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetUserStatistics
      tags:
      - user
  /api/v1/user/update:
    post:
      description: update user info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: UpdateInfo
      tags:
      - user
  /api/v1/user/update-password:
    post:
      description: update user password
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: UpdatePassword
      tags:
      - user
  /api/v1/user/userlist:
    post:
      description: get community user info
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: GetCommunityUserList
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization.
    type: apiKey
swagger: "2.0"
